// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168
#pragma warning disable CS1591 // document public APIs

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters
{
    public sealed class StageMasterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::StageMaster>
    {
        // Id
        private static global::System.ReadOnlySpan<byte> GetSpan_Id() => new byte[1 + 2] { 162, 73, 100 };
        // Name
        private static global::System.ReadOnlySpan<byte> GetSpan_Name() => new byte[1 + 4] { 164, 78, 97, 109, 101 };
        // Difficulty
        private static global::System.ReadOnlySpan<byte> GetSpan_Difficulty() => new byte[1 + 10] { 170, 68, 105, 102, 102, 105, 99, 117, 108, 116, 121 };
        // EnemyGroupId
        private static global::System.ReadOnlySpan<byte> GetSpan_EnemyGroupId() => new byte[1 + 12] { 172, 69, 110, 101, 109, 121, 71, 114, 111, 117, 112, 73, 100 };
        // Exp
        private static global::System.ReadOnlySpan<byte> GetSpan_Exp() => new byte[1 + 3] { 163, 69, 120, 112 };
        // ResourceId
        private static global::System.ReadOnlySpan<byte> GetSpan_ResourceId() => new byte[1 + 10] { 170, 82, 101, 115, 111, 117, 114, 99, 101, 73, 100 };

        public void Serialize(ref global::MessagePack.MessagePackWriter writer, global::StageMaster value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value is null)
            {
                writer.WriteNil();
                return;
            }

            var formatterResolver = options.Resolver;
            writer.WriteMapHeader(6);
            writer.WriteRaw(GetSpan_Id());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Id, options);
            writer.WriteRaw(GetSpan_Name());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.Name, options);
            writer.WriteRaw(GetSpan_Difficulty());
            writer.Write(value.Difficulty);
            writer.WriteRaw(GetSpan_EnemyGroupId());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.EnemyGroupId, options);
            writer.WriteRaw(GetSpan_Exp());
            writer.Write(value.Exp);
            writer.WriteRaw(GetSpan_ResourceId());
            global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Serialize(ref writer, value.ResourceId, options);
        }

        public global::StageMaster Deserialize(ref global::MessagePack.MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            var formatterResolver = options.Resolver;
            var length = reader.ReadMapHeader();
            var __Id__ = default(string);
            var __Name__ = default(string);
            var __Difficulty__ = default(int);
            var __EnemyGroupId__ = default(string);
            var __Exp__ = default(int);
            var __ResourceId__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var stringKey = global::MessagePack.Internal.CodeGenHelpers.ReadStringSpan(ref reader);
                switch (stringKey.Length)
                {
                    default:
                    FAIL:
                      reader.Skip();
                      continue;
                    case 2:
                        if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 25673UL) { goto FAIL; }

                        __Id__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 4:
                        if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 1701667150UL) { goto FAIL; }

                        __Name__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 10:
                        switch (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey))
                        {
                            default: goto FAIL;
                            case 7815262032712067396UL:
                                if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 31092UL) { goto FAIL; }

                                __Difficulty__ = reader.ReadInt32();
                                continue;

                            case 7305808869231650130UL:
                                if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 25673UL) { goto FAIL; }

                                __ResourceId__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                                continue;

                        }
                    case 12:
                        if (!global::System.MemoryExtensions.SequenceEqual(stringKey, GetSpan_EnemyGroupId().Slice(1))) { goto FAIL; }

                        __EnemyGroupId__ = global::MessagePack.FormatterResolverExtensions.GetFormatterWithVerify<string>(formatterResolver).Deserialize(ref reader, options);
                        continue;
                    case 3:
                        if (global::MessagePack.Internal.AutomataKeyGen.GetKey(ref stringKey) != 7370821UL) { goto FAIL; }

                        __Exp__ = reader.ReadInt32();
                        continue;

                }
            }

            var ____result = new global::StageMaster(__Id__, __Name__, __Difficulty__, __EnemyGroupId__, __Exp__, __ResourceId__);
            reader.Depth--;
            return ____result;
        }
    }

}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name
